@model business.Imagem

<style>
    .modal .modal-dialog .modal-content .modal-header button {
        float: left;
    }

    .modal .modal-dialog .modal-content .modal-footer button {
        float: left;
    }
</style>

@using (Html.BeginForm())
{
    <h4>Configuração de bordas</h4>
    @Html.Label("manter", "Manter a borda", htmlAttributes: new { @class = "control-label col-md-2" })
    @Html.CheckBox("Manter", true)
}

<hr />


@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Imagem</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IdImagem)
    @Html.HiddenFor(model => model.Arquivo)

    <input id="Hidden1" name="Hidden1" type="hidden" value="" />

    <div class="form-group">
        @Html.LabelFor(model => model.IdImagem, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IdImagem, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.IdImagem, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Redimencionar, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.Redimencionar)
                @Html.ValidationMessageFor(model => model.Redimencionar, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RedimencionarAltura, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RedimencionarAltura, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RedimencionarAltura, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RedimencionarLargura, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RedimencionarLargura, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RedimencionarLargura, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Recortar, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.Recortar)
                @Html.ValidationMessageFor(model => model.Recortar, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RecortarBottom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RecortarBottom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RecortarBottom, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RecortarLeft, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RecortarLeft, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RecortarLeft, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RecortarRight, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RecortarRight, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RecortarRight, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RecortarTop, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RecortarTop, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RecortarTop, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FlipHorizontal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                <input type="checkbox" id="FlipHorizontal" name="FlipHorizontal" value="false" />
                @Html.ValidationMessageFor(model => model.FlipHorizontal, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FlipVertical, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                <input type="checkbox" id="FlipVertical" name="FlipVertical" value="false" />
                @Html.ValidationMessageFor(model => model.FlipVertical, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Texto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.Texto)
                @Html.ValidationMessageFor(model => model.Texto, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TextoImagem, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.TextoImagem)
                @Html.ValidationMessageFor(model => model.TextoImagem, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RotacaoDireita, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                <input type="checkbox" id="RotacaoDireita" name="RotacaoDireita" value="false" />
                @Html.ValidationMessageFor(model => model.RotacaoDireita, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RotacaoEsquerda, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                <input type="checkbox" id="RotacaoEsquerda" name="RotacaoEsquerda" value="false" />
                @Html.ValidationMessageFor(model => model.RotacaoEsquerda, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Site", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("site", null, htmlAttributes: new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">

        @Html.LabelFor(model => model.pagina_, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <p>@ViewBag.erro</p>
            @Html.DropDownList("pagina_", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.pagina_, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FiguraFile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <span class="btn btn-default btn-file">
                @Html.TextBoxFor(modelo => modelo.FiguraFile, new { type = "file" })
            </span>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Salvar" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>

    <script>

    $(document).ready(function () {

        $("#pagina_").empty();
                $("#pagina_").append('<option value="0">[Selecione  uma pagina..]</option>');

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetPaginas")',
                    dataType: 'json',
                    data: { PedidoId: $("#site").val() },
                    success: function (data) {
                        $.each(data, function (i, data) {
                            $("#pagina_").append('<option value="'
                                + data.IdPagina + '">'
                                + data.Titulo + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Falha ao buscar paginas.' + ex);
                    }
                });

            $("#site").click(function () {

                $("#pagina_").empty();
                $("#pagina_").append('<option value="0">[Selecione  uma pagina..]</option>');

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetPaginas")',
                    dataType: 'json',
                    data: { PedidoId: $("#site").val() },
                    success: function (data) {
                        $.each(data, function (i, data) {
                            $("#pagina_").append('<option value="'
                                + data.IdPagina + '">'
                                + data.Titulo + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Falha ao buscar paginas.' + ex);
                    }
                });
                return false;
            });



        $("input[name='Recortar'], input[name='RecortarTop'], input[name='RecortarLeft'], input[name='RecortarRight'], input[name='RecortarBottom'], input[name='Redimencionar'], input[name='RedimencionarLargura'], input[name='RedimencionarAltura'], input[name='FlipHorizontal'], input[name='FlipVertical'], input[name='RotacaoEsquerda'], input[name='RotacaoDireita'], input[name='Texto'], input[name='TextoImagem']").change(function () {

                    
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("AlterarImagem")',
                    dataType: 'json',
                    data: {
                        Id: $("#IdImagem").val(),
                        Recortar: $("#Recortar").is(':checked'),
                        RecortarTop: $("#RecortarTop").val(),
                        RecortarLeft: $("#RecortarLeft").val(),
                        RecortarRight: $("#RecortarRight").val(),
                        RecortarBottom: $("#RecortarBottom").val(),                       
                        Redimencionar: $("#Redimencionar").is(':checked'),
                        RedimencionarLargura: $("#RedimencionarLargura").val(),
                        RedimencionarAltura: $("#RedimencionarAltura").val(),                                                
                        FlipHorizontal: $("#FlipHorizontal").is(':checked'),
                        FlipVertical: $("#FlipVertical").is(':checked'),
                        RotacaoEsquerda: $("#RotacaoEsquerda").is(':checked'),
                        RotacaoDireita: $("#RotacaoDireita").is(':checked'),
                        Texto: $("#Texto").is(':checked'),                        
                        TextoImagem: $("#TextoImagem").val()
                    },

                    success: function (data) {
                        if (data != "")
                        {
                          $("#Hidden1").val(true);
                            $(".content").load("/Pagina/getview",
                                { id: "@Model.pagina_" });                          

                        }
                        else { alert('Erro: Preencha o formulario corretamente'); } 
                       // location.reload();
                        

                    },
                    error: function (ex) {
                        alert('Falha na alteração');
                    }
                });
                return false;
                });




        });
    </script>

</div>
