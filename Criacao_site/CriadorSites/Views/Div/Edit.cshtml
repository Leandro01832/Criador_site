@model business.Div

@{
    ViewBag.Title = "Editar";
}

<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Bloco</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IdDiv)     

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Divisao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Divisao, new List<SelectListItem>
       {
           new SelectListItem{ Text="divisão em 1", Value="col-md-12" },
           new SelectListItem{ Text="divisão em 2", Value="col-md-6" },
           new SelectListItem{ Text="divisao em 3", Value="col-md-4" },
           new SelectListItem{ Text="divisão em 4", Value="col-md-3" },
           new SelectListItem{ Text="divisão em 6", Value="col-md-2" }
       }, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Divisao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Site", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("site", null, htmlAttributes: new { @class = "form-control" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pagina_, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("pagina_", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.pagina_, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.background_, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("background_", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.background_, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.imagem_, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("imagem_", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.imagem_, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Salvar" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Voltar para a lista", "Galeria", new { id = Model.pagina_ })
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery-1.10.2.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {

              $("#site").click(function () {

                $("#pagina_").empty();
                $("#pagina_").append('<option value="0">[Selecione  uma pagina..]</option>');

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetPaginas")',
                    dataType: 'json',
                    data: { PedidoId: $("#site").val() },
                    success: function (data) {
                        $.each(data, function (i, data) {
                            $("#pagina_").append('<option value="'
                                + data.IdPagina + '">'
                                + data.Titulo + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Falha ao buscar paginas.' + ex);
                    }
                });
                return false;
            });


            $("#pagina_").change(function () {

                $("#background_").empty();
                $("#background_").append('<option value="0">[Selecione  um plano de fundo..]</option>');

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetBackgrounds")',
                    dataType: 'json',
                    data: { PaginaId: $("#pagina_").val() },
                    success: function (data) {
                        $.each(data, function (i, data) {
                            $("#background_").append('<option value="'
                                + data.IdBackground + '">'
                                + data.Nome + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Falha ao buscar planos de fundo.' + ex);
                    }
                });
                return false;
            });


        });
    </script>

}
